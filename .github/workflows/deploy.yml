name: Build and Deploy

on:
  push:
    branches:
      - stage
      - dev
      - main

env:
  AWS_REGION: us-east-1

jobs:
  build:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: actions/setup-node@v3
        with:
          node-version: "14.21.3"

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::261709225091:role/github_role
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}

      - name: Set Environment Variables
        id: setVars
        run: |
          if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
            echo "PORTAL_BUCKET_NAME=portal123.cicd.com.br"  >> "$GITHUB_OUTPUT"
            echo "CLOUDFRONT_DISTRIBUTION=E2I4UWSTEM5TQW"  >> "$GITHUB_OUTPUT"
          fi
          if [[ "${{github.base_ref}}" == "stage" || "${{github.ref}}" == "refs/heads/stage" ]]; then
            echo "PORTAL_BUCKET_NAME=portal123.stage.cicd.com.br"  >> "$GITHUB_OUTPUT"
            echo "CLOUDFRONT_DISTRIBUTION=EGBFQVEFIC4IQ"  >> "$GITHUB_OUTPUT"
          fi
          if [[ "${{github.base_ref}}" == "dev" || "${{github.ref}}" == "refs/heads/dev" ]]; then
            echo "PORTAL_BUCKET_NAME=portal123.dev.cicd.com.br"  >> "$GITHUB_OUTPUT"
            echo "CLOUDFRONT_DISTRIBUTION=E1ZEKQTMQZDO2D"  >> "$GITHUB_OUTPUT"
          fi

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: npm install
        run: npm install

      - name: validating lint
        run: npm run lint

      - name: build
        run: npm run build

      - name: limpando o bucket
        run: aws s3 rm s3://${{ steps.setVars.outputs.PORTAL_BUCKET_NAME }} --recursive

      - name: uploading app
        run: aws s3 cp dist/ s3://${{ steps.setVars.outputs.PORTAL_BUCKET_NAME }} --recursive

      - name: Deploy on AWS (invalidate cache)
        run: aws cloudfront create-invalidation --distribution-id ${{ steps.setVars.outputs.CLOUDFRONT_DISTRIBUTION }} --paths "/*"
